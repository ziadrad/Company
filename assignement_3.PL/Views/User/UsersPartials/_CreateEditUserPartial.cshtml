@model UserToReturnDto
@inject RoleManager<IdentityRole> _rolemanager;

@{
    var roles = ViewData["userRole"] as string;
}
<div class="my-3">
    <label asp-for="UserName" class="col-form-label">Name</label>
    <input   asp-for="UserName" class="form-control" />
    <span asp-validation-for="UserName" class="text-danger"></span>

</div>
<div class="my-3">
    <label asp-for="FirstName" class="col-form-label">Phone</label>
    <input   asp-for="FirstName" class="form-control" />
    <span asp-validation-for="FirstName" class="text-danger"></span>

</div>
<div class="my-3">
    <label asp-for="LastName" class="col-form-label">Phone</label>
    <input   asp-for="LastName" class="form-control" />
    <span asp-validation-for="LastName" class="text-danger"></span>

</div>
<div class="my-3">
    <label asp-for="Email" class="col-form-label">Email</label>
    <input   asp-for="Email" class="form-control" />
    <span asp-validation-for="Email" class="text-danger"></span>

</div>

<div class="my-3">
    <label asp-for="Role" class="col-form-label">Role</label>
    <select class="form-select w-100 " asp-for="Role">

        @foreach (var role in _rolemanager.Roles.Select(u => new RollToReturnDto()
         {

             Id = u.Id,
             Name = u.Name,
         }).Where(u => u.Name != roles))
        {
            <option value="@role.Id">@role.Name </option>
        }
        @foreach (var role in _rolemanager.Roles.Select(u => new RollToReturnDto()
         {

             Id = u.Id,
             Name = u.Name,
         }).Where(u => u.Name == roles))
        {
            <option selected value="@role.Id">@role.Name </option>
        }

    </select>


</div>

<div>
    <input type="submit" value="create" class="btn btn-info" />
    <a asp-action="Index" A class="btn btn-light"> Back to List </a>

</div>