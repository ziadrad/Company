@model string
@using Microsoft.AspNetCore.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@{
    var user = await UserManager.FindByNameAsync(User.Identity.Name);
    IList<string> roles = new List<string>();
    if (user is not null)
    {
        roles = await UserManager.GetRolesAsync(user);
    }
    IdentityRole? getrole;
    IList<Claim> role_claims = new List<Claim>();
    if (roles.Count != 0)
    {
        getrole = await RoleManager.FindByNameAsync(roles.First());
        role_claims = await RoleManager.GetClaimsAsync(getrole);
    }


}
<td>

    <a asp-action="Details" class="btn btn-warning" asp-route-id="@Model"> Details</a>


</td>
<td>
    @if (role_claims.Count != 0)
    {
        @if (role_claims?.Where(c => c.Type == "EditPermission").FirstOrDefault()?.Value.ToLower() == "true")
        {
            <a asp-action="Edit" class="btn btn-info" asp-route-id="@Model"> Update</a>
        }
    }

</td>
<td>
    @if (role_claims.Count != 0)
    {
        @if (role_claims?.Where(c => c.Type == "DeletePermission").FirstOrDefault()?.Value.ToLower() == "true")
        {
            <a asp-action="Delete" class="btn btn-danger" asp-route-id="@Model"> Delete</a>
        }

    }

</td>